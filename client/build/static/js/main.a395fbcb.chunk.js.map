{"version":3,"sources":["utils/bookAPI.js","pages/Saved/index.js","components/SearchForm/index.js","components/SearchResultCard/index.js","pages/Search/index.js","components/NavBar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["require","config","query","KEY","axios","get","id","delete","bookData","post","Saved","useState","books","setBooks","loadBooks","bookAPI","then","res","data","console","log","catch","err","useEffect","Container","CardDeck","Row","map","book","favorited","key","_id","className","Card","Header","style","height","Title","title","Subtitle","author","CardImg","src","image","Body","Text","description","Footer","Col","Button","varient","onClick","variant","href","link","SearchForm","props","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","handleFormSubmit","SearchResultCard","bookFavorited","Search","state","searchResults","searchForBooks","API","setState","items","event","target","preventDefault","this","result","volumeInfo","authors","imageLinks","smallThumbnail","saleInfo","buyLink","Component","NavBar","Navbar","bg","Brand","Nav","Link","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a395fbcb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// Enable access to .env variables\r\nrequire('dotenv').config();\r\n\r\nexport default {\r\n  // search google books\r\n  searchBooks: function(query, KEY) {\r\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=$\" + query + \"&\" + KEY);\r\n    //\"https://www.googleapis.com/books/v1/volumes?q=coding&key=AIzaSyBc7aFFzPmgNSKTaKVlFb6HnsTqWarJktc\"\r\n  },\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport bookAPI from \"../../utils/bookAPI\";\r\nimport {Card, Button, CardDeck, Container, Row, CardImg, Col} from 'react-bootstrap';\r\nimport \"./style.css\"\r\n\r\nfunction Saved() {\r\n  const [books, setBooks] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  function loadBooks() {   \r\n    bookAPI.getBooks()\r\n    .then((res) => {\r\n      setBooks(res.data)\r\n      console.log(res.data)})\r\n      .catch(err => console.log(err));\r\n      \r\n  };\r\n\r\n  function deleteBook(id) {\r\n    bookAPI.deleteBook(id)\r\n    .then(res => loadBooks())\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Container>\r\n      <h1>Favorite Books</h1>\r\n        <CardDeck> \r\n          <Row>\r\n          {books.map(book => ( book.favorited?\r\n          <div key={book._id} className=\"col-lg-4 col-md-6 col-sm\">\r\n            <Card className=\"mb-2 m-0\">\r\n              <Card.Header style={{height:\"95px\"}}>\r\n                <Card.Title>{book.title}</Card.Title>\r\n                <Card.Subtitle>{book.author}</Card.Subtitle>\r\n              </Card.Header>\r\n\r\n              <CardImg src={book.image} style={{height:\"400px\"}}/>\r\n\r\n              <Card.Body className=\"card-body-style\">\r\n                    <Card.Text className=\"card-text-style\">{book.description}</Card.Text>\r\n              </Card.Body>\r\n\r\n              <Card.Footer style={{height:\"95px\"}}>\r\n                <Row>\r\n                  <Col>\r\n                    <Button varient=\"danger\" style={{height:\"50px\"}} onClick={() => deleteBook(book._id)}>\r\n                      Delete Book\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                  {/* I don't know why the link isn't working here!No href showing in dev tools */}\r\n                    <Button variant=\"success\" href={book.link} style={{height:\"50px\"}}>\r\n                      More Info\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Footer>\r\n            </Card>\r\n            </div>\r\n          : null ))}\r\n          </Row>\r\n        </CardDeck>\r\n      </Container>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Saved;","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.search}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search books\"\r\n          id=\"search\"\r\n        />\r\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Button, Card, CardImg, Col, Row} from 'react-bootstrap';\r\nimport bookAPI from \"../../utils/bookAPI\";\r\n\r\nfunction SearchResultCard(props) {\r\n\r\n  function favoriteBook() {\r\n    bookAPI.saveBook(bookFavorited)\r\n    .then((res) => {\r\n      console.log(\"Book saved as favorited\")\r\n    })\r\n    .catch(err => console.log(err));  \r\n  };\r\n\r\n  const bookFavorited  = {\r\n    title: props.title,\r\n    description: props.description,\r\n    author: props.author,\r\n    image: props.image,\r\n    link: props.link,\r\n    favorited: true,\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-lg-4 col-md-6 col-sm\"> \r\n      <Card key={props.id} className=\"mb-2 m-0\">\r\n        <Card.Header style={{height:\"95px\"}}>\r\n          <Card.Title>{props.title}</Card.Title>\r\n          <Card.Subtitle>{props.author}</Card.Subtitle>\r\n        </Card.Header>\r\n\r\n        <CardImg src={props.image} style={{height:\"400px\"}}/>\r\n\r\n        <Card.Body className=\"card-body-style\">\r\n              <Card.Text className=\"card-text-style\">{props.description}</Card.Text>\r\n        </Card.Body>\r\n        \r\n\r\n        <Card.Footer style={{height:\"95px\"}}>\r\n          <Row>\r\n            <Col>\r\n              <Button variant=\"info\" onClick = {favoriteBook} style={{height:\"50px\"}}>\r\n                Add to Favorites\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button variant=\"success\" href={props.link} style={{height:\"50px\"}}>\r\n                More Info\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultCard;","import React, { Component } from \"react\";\r\n//, useEffect, useState\r\nimport API from \"../../utils/bookAPI.js\";\r\n//when API link and everything API related is commented out, it will load to Heroku, but can't do anything\r\nimport SearchForm from \"../../components/SearchForm\"\r\nimport SearchResultCard from \"../../components/SearchResultCard\"\r\nimport {Row, Container, CardDeck} from 'react-bootstrap';\r\n\r\nclass Search extends Component {\r\n  \r\n  state = {\r\n    searchResults: [],\r\n    search: \"\",\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    // When this component mounts, search the Google Books API for ...\r\n    this.searchForBooks(\"zebras\");\r\n  };\r\n\r\n  searchForBooks = query => {\r\n    API.searchBooks(query)\r\n      .then((res) => {\r\n        this.setState({ searchResults: res.data.items })\r\n        console.log(res)\r\n        console.log(this.state.searchResults)\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  handleInputChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n  };\r\n\r\n  // When the form is submitted, search the Google API for `this.state.search`\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.searchForBooks(this.state.search);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <SearchForm\r\n            search={this.state.search}\r\n            handleFormSubmit={this.handleFormSubmit}\r\n            handleInputChange={this.handleInputChange}\r\n          />\r\n\r\n          {/* <Row> */}\r\n            <CardDeck>\r\n              <Row>\r\n              {this.state.searchResults.map(result => (\r\n                // <div key={result.id}>\r\n                  <SearchResultCard\r\n                    key={result.id}\r\n                    id={result.id}\r\n                    title={result.volumeInfo.title}\r\n                    author={result.volumeInfo.authors}\r\n                    description={result.volumeInfo.description}\r\n                    image={result.volumeInfo.imageLinks.smallThumbnail}\r\n                    link={result.saleInfo.buyLink}\r\n                  />\r\n                // </div>\r\n              ))}\r\n              </Row>\r\n            </CardDeck>\r\n          {/* </Row> */}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\n// import { Brand } from 'react-bootstrap';\r\n// import { Link } from 'react-bootstrap';\r\n// import { Form } from 'react-bootstrap';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\">Book IT</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/\">Home/Search</Nav.Link>\r\n        <Nav.Link href=\"/saved\">Saved</Nav.Link>\r\n      </Nav>\r\n      {/* <Form inline>\r\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n        <Button variant=\"outline-info\">Search</Button>\r\n      </Form> */}\r\n    </Navbar>\r\n    \r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\n//, { Component }\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SavedPage from \"./pages/Saved\";\nimport SearchPage from \"./pages/Search\";\nimport NavBar from \"./components/NavBar\";\nimport \"./App.css\";\n\n//import logo from \"./logo.svg\";\n//import SavedPage from \"../src/pages/Saved\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route exact path={[\"/\", \"/search\"]}>\n            <SearchPage />\n          </Route>\n          <Route exact path=\"/saved\">\n            <SavedPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n\n// <div className=\"App\">\n    //   <div className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <h2>Welcome to React</h2>\n    //   </div>\n    //   <p className=\"App-intro\">\n    //     To get started, edit <code>src/App.js\n    //       <SavedPage />\n    //       </code> and save to reload.\n    //   </p>\n    // </div>\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}